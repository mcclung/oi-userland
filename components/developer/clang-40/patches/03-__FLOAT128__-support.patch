Adapted from https://github.com/oracle/solaris-userland/blob/master/components/llvm/patches/D41240.patch
by Geoffrey Weiss.

--- llvm-4.0.1.src/tools/clang/lib/Basic/Targets.cpp.old        2019-06-09 22:48:17.657843008 +0000
+++ llvm-4.0.1.src/tools/clang/lib/Basic/Targets.cpp    2019-06-09 22:49:14.955667013 +0000
@@ -704,12 +704,22 @@
     Builder.defineMacro("_LARGEFILE64_SOURCE");
     Builder.defineMacro("__EXTENSIONS__");
     Builder.defineMacro("_REENTRANT");
+    if (this->HasFloat128)
+      Builder.defineMacro("__FLOAT128__");
   }
 public:
   SolarisTargetInfo(const llvm::Triple &Triple, const TargetOptions &Opts)
       : OSTargetInfo<Target>(Triple, Opts) {
     this->WCharType = this->SignedInt;
     // FIXME: WIntType should be SignedLong
+    switch (Triple.getArch()) {
+    default:
+      break;
+    case llvm::Triple::x86:
+    case llvm::Triple::x86_64:
+      this->HasFloat128 = true;
+      break;
+    }
   }
 };

--- llvm-4.0.1.src/tools/clang/test/CodeGenCXX/float128-declarations.cpp.old    2019-06-14 13:35:36.362537598 +0000
+++ llvm-4.0.1.src/tools/clang/test/CodeGenCXX/float128-declarations.cpp        2019-06-14 13:36:34.139901642 +0000
@@ -12,6 +12,11 @@
 // RUN:   %s -o - | FileCheck %s -check-prefix=CHECK-X86
 // RUN: %clang_cc1 -emit-llvm -triple amd64-pc-openbsd -std=c++11 \
 // RUN:   %s -o - | FileCheck %s -check-prefix=CHECK-X86
+// RUN: %clang_cc1 -emit-llvm -triple i386-pc-solaris2.11 -std=c++11 \
+// RUN:   %s -o - | FileCheck %s -check-prefix=CHECK-X86
+// RUN: %clang_cc1 -emit-llvm -triple x86_64-pc-solaris2.11 -std=c++11 \
+// RUN:   %s -o - | FileCheck %s -check-prefix=CHECK-X86
+
 //
 /*  Various contexts where type __float128 can appear. The different check
     prefixes are due to different mangling on X86 and different calling
